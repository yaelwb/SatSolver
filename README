Manipulating Decision Methods of Modern SAT Solvers for Bounded Model Checking

Based on Princeton University's ZChaff research project, we were assigned the following: Alter the original decision method (the order in which the next variable to be assigned is picked), in order to be applied on cnf formulas representing logic circuits - taking advantage of the specific structure of those formulas.

The decision method of the original design picked the next variable to be assigned based on _ordered_vars vector, selecting the highest scored variable yet unassigned.
We created CVariableOrderManager class, to assume responsibility for picking the next assigned variable and maintaining the variables order, using the newly added CCycle class.
Variables are chosen for assignment in the following order:
First pick and assign all the state variables, clock cycle by clock cycle, by the defined order.
For each clock cycle, state variables order is decided by their score, as per original algorithm.
Later on, assign all remaining variables (logic gates, input variables) â€“ 
also by score.

Our changes were made to zchaff_solver.h and zchaff_solver.cpp

An explanation of the problem domain (CNF, SAT, BMC), graphic example and results are available at the project presentation pdf file.
